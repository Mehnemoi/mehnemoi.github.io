{"title":"Description","markdown":{"headingText":"Description","containsRefs":false,"markdown":":::::::::{.code-proj-body}\n\n:::::::{.code-proj-top .video}\n\n:::::{.code-proj-image .video}\n\n<!-- :::{.screenshot-image} -->\n{{< video assets/MUSEVideo.mov  >}}\n\n<!-- ::: -->\n\n:::::\n\n\n:::::{.code-proj-info .video}\n\n:::{.code-proj-title}\nMUSE\n:::\n\n:::{.code-proj-names}\nEshanya Agrawal, Deniz Bajin, Zariah Folkes, Kaitlynn Gray\n\n:::\n\n:::{.code-proj-class}\n**Course:** Computational Design Tools\n\n**Tools:** HTML, CSS, JavaScript\n\n:::\n\n:::{.code-proj-links}\n[Design Documentation](assets/MUSEDesignDoc.pdf)\n\n[GitHub Repository](https://github.com/DenizBajin/MUSE)\n\n<!-- [Paper](assets/MUSEPaper.pdf) -->\n:::\n\n\n\n:::::\n\n\n\n\n\n:::::::\n\n:::::::{.code-proj-bottom}\n\n\n\n:::::{.code-proj-desc}\n\n:::{.emphasis}\nI collaborated with 3 students to apply the human-centered design process to software development.\n:::\n\nMUSE is a digital DJ board website. It is a tool for people to better understand how different parts of sound relate to each other. This provides a foundation for those interested in producing music. We help visualize these different parts by associating sound with color.\n\nSo, instead of playing music tracks, users can play colors as sounds. Users can change the tint and saturation of the colors using sliders. These sliders also impact the sound of the color; changing tint changes the speed, and changing saturation changes the volume. This allows users to see the visual impacts of changing parts of sound. We hope that by connecting a visual change with altering sound, users can better understand how the speed and volume change a music track.\n\nUsers can play two colors at once to create a sound mixture and save it.\n\n![](assets/MUSEDocs/MUSEUIColorTone.png){.lightbox}\n\n:::{.screenshot-caption}\nThe MUSE DJ board. Two colors are playing, and both have been edited using the sliders.\n:::\n\n\n\n### The Process\nI came up with the initial idea of MUSE. At the beginning, I proposed we create a web application that connected music to color. When a color changed, the music would shift to express how it changed. With this, users would not have to rely on seeing a color itself, such as if they were colorblind, to understand one color's relationship to another.\n\n#### Using Human Centered Design\nMy team applied the human-centered design process to create MUSE. For the empathizing stage, I worked with my team to generate questions to understand how people associated color and sound. We also asked about their desire to produce music. \n\nWe interviewed one person each. We found that people had a need to understand sound instead of color. By understanding sound, people could create their own music. So, we shifted MUSE to focus on using color to understand sound. \n\n\n#### Low-Fidelity Prototype\nI worked with my team to create the low-fidelity prototype of MUSE in Canva below. One teammate selected a pre-made DJ board graphic and printed it. Then, I helped cut out colored pieces of paper to represent the color disks we would play on each side of the board. We also cut out smaller pieces to represent these colors mixing, and sliders to change the shade, tint, and saturation of the colors.\n\nWe used this prototype to create a video showing the rough functionality of MUSE. After, we brought this prototype to class to test with our classmates. I aided in taking notes while two of my teammates simulated the sounds using their voices.\n\n![](assets/MUSEDocs/MUSELowFidelityPrototype.png){.lightbox}\n\n#### Figma Wireframe\nI created the Figma wireframe below of our \"Saved Colors\" page. Mixed and saved colors would collect here. I envisioned that users could select colors from here to bring back out to the DJ board.\n\n![](assets/MUSEDocs/MUSEFigmaSavedColors.png){.lightbox}\n\n#### State Diagram\nWe created a state diagram to visualize how the user would navigate MUSE. Each square represents a state of MUSE, such as being on a certain page or selecting one of the music disks. The arrows show how users can get from one state to another.\n\nWith this, we could understand the interactions we were programming into MUSE.\n\n![](assets/MUSEDocs/MUSEStateDiagram.png){.lightbox}\n\n#### User Goal Diagram\nMy team and I also created the below user goal diagram to see what a user would need to do, in order, to achieve their goal of using sound to understand color.\n\n![](assets/MUSEDocs/MUSEUserGoal.png){.lightbox}\n\n#### User Interface (UI) Iteration\nI polished the UI of MUSE. Deniz led the programming of the base components, allowing me to go in and make UI updates as needed. Below are the before and after of my UI updates. \n\nThe \"before\" images have been cropped on the top and bottom to align with the after images. \n\n##### Main Page Redesign\n::::{.screenshots-container}\n:::{.screenshot}\n###### Before\n![](assets/MUSEDocs/MUSEInitialUI.png){.lightbox}\n\n:::{.screenshot-caption}\nMUSE's initial main page UI.\n:::\n\n:::\n\n:::{.screenshot}\n###### After\n![](assets/MUSEDocs/MUSEUI3.png){.lightbox}\n\n:::{.screenshot-caption}\nI updated the UI code to make MUSE look more like a DJ board. Now the design aligns closer to the DJ board we used in our low-fidelity prototype.\n:::\n\n:::\n\n::::\n\n##### Help Page Redesign\n::::{.screenshots-container}\n:::{.screenshot}\n###### Before\n![](assets/MUSEDocs/MUSEHelpPage1.png){.lightbox}\n\n\n:::{.screenshot-caption}\nMUSE's initial help page UI.\n:::\n\n:::\n\n:::{.screenshot}\n###### After\n![](assets/MUSEHelpPage.png){.lightbox}\n\n:::{.screenshot-caption}\nI updated the help page to number each step and add a Q-and-A section. This helped to guide users to specific pieces of information without having to read all of the content.\n:::\n\n:::\n\n::::\n\n#### Programming Color Mixing\nUsers should be able to choose a color disk on each side and have the color mix in the smaller disk in between them. Our initial code successfully mixed colors like yellow and blue to make green, or red and yellow to make orange. However, mixing red and blue produced... green? That wasn't right.\n\nSo, I took initiative and used a combination of internet resources, ChatGPT, and help from my professor during their office hours to successfully correct our code to mix colors naturally. It was ultimately an internet resource my professor found that solved our color troubles! You can view the resource [here](https://stackoverflow.com/questions/14819058/mixing-two-colors-naturally-in-javascript).\n\n![](assets/MUSEMainUI.png){.lightbox}\n\n:::{.screenshot-caption}\nYellow and purple mixing successfully.\n:::\n\n##### Curious about the color-mixing bug?\nThis happened because we were averaging the HSL values of each color to mix them. HSL values represent colors as a group of three numbers like this: (hue, saturation, lightness). These values control the hue (color), saturation (vibrancy), and lightness (brightness) of a color. Using HSL values was helpful because MUSE focused on shifting the saturation and brightness/darkness of colors.  \n\nHue ranges from 0 to 360, like the degrees of a circle. This circle is mapped onto the color wheel, where 0 = red, 180 = cyan, and 360 = red again ([source](https://www.w3schools.com/html/html_colors_hsl.asp)). The image below, screenshotted from the Mozilla Developers [MDN website](https://developer.mozilla.org/en-US/blog/learn-css-hues-colors-hsl/), shows what this color wheel looks like:\n\n:::{.wide}\n![](assets/MDNColorWheel.png){.lightbox}\n:::\n\n:::{.screenshot-caption}\n[*Image Source.*](https://developer.mozilla.org/en-US/blog/learn-css-hues-colors-hsl/)\n:::\n\nSo, pure red would have a hue value of 0, and yellow would have a hue value around 60. If we wanted to mix these colors by averaging their hue values, we would get 30. This would correctly map onto orange!\n\nHowever, if we did this same process using red (hue = 0) and blue (hue = 240), we would get 120... which maps onto green! So, we needed to convert our colors to another value representation to mix them successfully. Following the [source](https://stackoverflow.com/questions/14819058/mixing-two-colors-naturally-in-javascript) I received from my professor, I converted our colors to RGB before mixing them.\n\nRGB values represent how much red, green, or blue is in a color, ranging from 0 to 255, like this: (red, green, blue). For example, pure red would be (255, 0, 0) and pure blue would be (0, 0, 255). So, mixing red and blue by averaging their values would result in (128, 0, 128), which represents a color with equal amounts of red and blue, AKA purple! \n\nBy changing our colors from HSL to RGB before averaging their values, colors would mix naturally.\n\n\n### Final Product\n:::::{.screenshots-container}\n\n:::{.screenshot}\n#### Welcome Page\n\n:::{.screenshot-image}\n\n![](assets/MUSEWelcome.png){.lightbox}\n\n:::\n\n:::{.screenshot-caption}\nOur welcome screen with the logo designed by Eshanya.\n:::\n\n:::\n\n:::{.screenshot}\n#### Main Page\n\n:::{.screenshot-image}\n![](assets/MUSEDocs/MUSEUIColor2.png){.lightbox}\n:::\n\n:::{.screenshot-caption}\nUsers select one of the colors in the middle of the screen to play on each of the larger disks. Zariah programmed the sound editing.\n\nThe colors on the disks mix and show up as the smaller disk between the large ones.\n:::\n\n:::\n\n:::{.screenshot}\n#### Saved Colors Page\n\n:::{.screenshot-image}\n\n![](assets/MUSESavedCols.png){.lightbox}\n\n:::\n\n:::{.screenshot-caption}\nHere, users can see all of the color mixtures they have saved.\n:::\n\n:::\n\n:::{.screenshot}\n#### Help Page\n\n:::{.screenshot-image}\n![](assets/MUSEHelpPage.png){.lightbox}\n\n:::\n\n:::{.screenshot-caption}\nTeaches users how to use MUSE.\n:::\n\n:::\n\n\n:::::\n\n### Reflection\nI learned how to apply the human-centered design process to software development. I gained experience applying insights gained from interviews and user prototyping sessions to improve our product. It was a privilege to have a group of students enjoy an idea I thought of enough to dedicate time to refining it and building a working product that brought it to life.   \n\n:::::\n\n:::::::\n\n:::::::::","srcMarkdownNoYaml":""},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"markdown"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","toc":false,"output-file":"MUSE.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.6.42","theme":"../styles-adv.scss","mainfont":"Lexend, Arial, sans-serif"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}